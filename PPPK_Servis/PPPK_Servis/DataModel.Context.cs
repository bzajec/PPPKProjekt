//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PPPK_Servis
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PPPK_ProjektEntities : DbContext
    {
        public PPPK_ProjektEntities()
            : base("name=PPPK_ProjektEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Item> Items { get; set; }
        public virtual DbSet<PutniNalog> PutniNalogs { get; set; }
        public virtual DbSet<Servi> Servis { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Vozac> Vozacs { get; set; }
        public virtual DbSet<Vozilo> Voziloes { get; set; }
    
        public virtual int AddPutniNalog(Nullable<int> vozacID, Nullable<int> voziloID, string tip, string pocetniGrad, string zavrsniGrad, Nullable<int> ocekivaniDani, Nullable<int> kilometri, Nullable<int> brzina, Nullable<int> gorivo)
        {
            var vozacIDParameter = vozacID.HasValue ?
                new ObjectParameter("VozacID", vozacID) :
                new ObjectParameter("VozacID", typeof(int));
    
            var voziloIDParameter = voziloID.HasValue ?
                new ObjectParameter("VoziloID", voziloID) :
                new ObjectParameter("VoziloID", typeof(int));
    
            var tipParameter = tip != null ?
                new ObjectParameter("Tip", tip) :
                new ObjectParameter("Tip", typeof(string));
    
            var pocetniGradParameter = pocetniGrad != null ?
                new ObjectParameter("PocetniGrad", pocetniGrad) :
                new ObjectParameter("PocetniGrad", typeof(string));
    
            var zavrsniGradParameter = zavrsniGrad != null ?
                new ObjectParameter("ZavrsniGrad", zavrsniGrad) :
                new ObjectParameter("ZavrsniGrad", typeof(string));
    
            var ocekivaniDaniParameter = ocekivaniDani.HasValue ?
                new ObjectParameter("OcekivaniDani", ocekivaniDani) :
                new ObjectParameter("OcekivaniDani", typeof(int));
    
            var kilometriParameter = kilometri.HasValue ?
                new ObjectParameter("Kilometri", kilometri) :
                new ObjectParameter("Kilometri", typeof(int));
    
            var brzinaParameter = brzina.HasValue ?
                new ObjectParameter("Brzina", brzina) :
                new ObjectParameter("Brzina", typeof(int));
    
            var gorivoParameter = gorivo.HasValue ?
                new ObjectParameter("Gorivo", gorivo) :
                new ObjectParameter("Gorivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPutniNalog", vozacIDParameter, voziloIDParameter, tipParameter, pocetniGradParameter, zavrsniGradParameter, ocekivaniDaniParameter, kilometriParameter, brzinaParameter, gorivoParameter);
        }
    
        public virtual int AddServis(Nullable<int> idServis, Nullable<int> itemID, Nullable<int> voziloID)
        {
            var idServisParameter = idServis.HasValue ?
                new ObjectParameter("idServis", idServis) :
                new ObjectParameter("idServis", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var voziloIDParameter = voziloID.HasValue ?
                new ObjectParameter("VoziloID", voziloID) :
                new ObjectParameter("VoziloID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddServis", idServisParameter, itemIDParameter, voziloIDParameter);
        }
    
        public virtual int AddVozac(string name, Nullable<int> brojMobitela, Nullable<int> brojVozackeDozvole)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var brojMobitelaParameter = brojMobitela.HasValue ?
                new ObjectParameter("BrojMobitela", brojMobitela) :
                new ObjectParameter("BrojMobitela", typeof(int));
    
            var brojVozackeDozvoleParameter = brojVozackeDozvole.HasValue ?
                new ObjectParameter("BrojVozackeDozvole", brojVozackeDozvole) :
                new ObjectParameter("BrojVozackeDozvole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddVozac", nameParameter, brojMobitelaParameter, brojVozackeDozvoleParameter);
        }
    
        public virtual int AddVozilo(string tipVozila, string markaVozila, Nullable<int> godinaProizvodnje, Nullable<int> inicijalnoStanjeKilometara)
        {
            var tipVozilaParameter = tipVozila != null ?
                new ObjectParameter("TipVozila", tipVozila) :
                new ObjectParameter("TipVozila", typeof(string));
    
            var markaVozilaParameter = markaVozila != null ?
                new ObjectParameter("MarkaVozila", markaVozila) :
                new ObjectParameter("MarkaVozila", typeof(string));
    
            var godinaProizvodnjeParameter = godinaProizvodnje.HasValue ?
                new ObjectParameter("GodinaProizvodnje", godinaProizvodnje) :
                new ObjectParameter("GodinaProizvodnje", typeof(int));
    
            var inicijalnoStanjeKilometaraParameter = inicijalnoStanjeKilometara.HasValue ?
                new ObjectParameter("InicijalnoStanjeKilometara", inicijalnoStanjeKilometara) :
                new ObjectParameter("InicijalnoStanjeKilometara", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddVozilo", tipVozilaParameter, markaVozilaParameter, godinaProizvodnjeParameter, inicijalnoStanjeKilometaraParameter);
        }
    
        public virtual int DeletePutniNalog(Nullable<int> idPutniNalog)
        {
            var idPutniNalogParameter = idPutniNalog.HasValue ?
                new ObjectParameter("idPutniNalog", idPutniNalog) :
                new ObjectParameter("idPutniNalog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePutniNalog", idPutniNalogParameter);
        }
    
        public virtual int DeleteServis(Nullable<int> idServis)
        {
            var idServisParameter = idServis.HasValue ?
                new ObjectParameter("idServis", idServis) :
                new ObjectParameter("idServis", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteServis", idServisParameter);
        }
    
        public virtual int DeleteVozac(Nullable<int> idVozac)
        {
            var idVozacParameter = idVozac.HasValue ?
                new ObjectParameter("idVozac", idVozac) :
                new ObjectParameter("idVozac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVozac", idVozacParameter);
        }
    
        public virtual int DeleteVozilo(Nullable<int> idVozilo)
        {
            var idVoziloParameter = idVozilo.HasValue ?
                new ObjectParameter("idVozilo", idVozilo) :
                new ObjectParameter("idVozilo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVozilo", idVoziloParameter);
        }
    
        public virtual ObjectResult<GetAllPutniNalogi_Result> GetAllPutniNalogi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPutniNalogi_Result>("GetAllPutniNalogi");
        }
    
        public virtual ObjectResult<GetAllVozaci_Result> GetAllVozaci()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllVozaci_Result>("GetAllVozaci");
        }
    
        public virtual ObjectResult<GetAllVozila_Result> GetAllVozila()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllVozila_Result>("GetAllVozila");
        }
    
        public virtual ObjectResult<GetPutniNalog_Result> GetPutniNalog(Nullable<int> idPutniNalog)
        {
            var idPutniNalogParameter = idPutniNalog.HasValue ?
                new ObjectParameter("idPutniNalog", idPutniNalog) :
                new ObjectParameter("idPutniNalog", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPutniNalog_Result>("GetPutniNalog", idPutniNalogParameter);
        }
    
        public virtual ObjectResult<GetVozac_Result> GetVozac(Nullable<int> idVozac)
        {
            var idVozacParameter = idVozac.HasValue ?
                new ObjectParameter("idVozac", idVozac) :
                new ObjectParameter("idVozac", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVozac_Result>("GetVozac", idVozacParameter);
        }
    
        public virtual ObjectResult<GetVozilo_Result> GetVozilo(Nullable<int> idVozilo)
        {
            var idVoziloParameter = idVozilo.HasValue ?
                new ObjectParameter("idVozilo", idVozilo) :
                new ObjectParameter("idVozilo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVozilo_Result>("GetVozilo", idVoziloParameter);
        }
    
        public virtual ObjectResult<SelectAll_Result> SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAll_Result>("SelectAll");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdatePutniNalog(Nullable<int> idPutniNalog, Nullable<int> vozacID, Nullable<int> voziloID, string tip, string pocetniGrad, string zavrsniGrad, Nullable<int> ocekivaniDani, Nullable<int> kilometri, Nullable<int> brzina, Nullable<int> gorivo)
        {
            var idPutniNalogParameter = idPutniNalog.HasValue ?
                new ObjectParameter("idPutniNalog", idPutniNalog) :
                new ObjectParameter("idPutniNalog", typeof(int));
    
            var vozacIDParameter = vozacID.HasValue ?
                new ObjectParameter("VozacID", vozacID) :
                new ObjectParameter("VozacID", typeof(int));
    
            var voziloIDParameter = voziloID.HasValue ?
                new ObjectParameter("VoziloID", voziloID) :
                new ObjectParameter("VoziloID", typeof(int));
    
            var tipParameter = tip != null ?
                new ObjectParameter("Tip", tip) :
                new ObjectParameter("Tip", typeof(string));
    
            var pocetniGradParameter = pocetniGrad != null ?
                new ObjectParameter("PocetniGrad", pocetniGrad) :
                new ObjectParameter("PocetniGrad", typeof(string));
    
            var zavrsniGradParameter = zavrsniGrad != null ?
                new ObjectParameter("ZavrsniGrad", zavrsniGrad) :
                new ObjectParameter("ZavrsniGrad", typeof(string));
    
            var ocekivaniDaniParameter = ocekivaniDani.HasValue ?
                new ObjectParameter("OcekivaniDani", ocekivaniDani) :
                new ObjectParameter("OcekivaniDani", typeof(int));
    
            var kilometriParameter = kilometri.HasValue ?
                new ObjectParameter("Kilometri", kilometri) :
                new ObjectParameter("Kilometri", typeof(int));
    
            var brzinaParameter = brzina.HasValue ?
                new ObjectParameter("Brzina", brzina) :
                new ObjectParameter("Brzina", typeof(int));
    
            var gorivoParameter = gorivo.HasValue ?
                new ObjectParameter("Gorivo", gorivo) :
                new ObjectParameter("Gorivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePutniNalog", idPutniNalogParameter, vozacIDParameter, voziloIDParameter, tipParameter, pocetniGradParameter, zavrsniGradParameter, ocekivaniDaniParameter, kilometriParameter, brzinaParameter, gorivoParameter);
        }
    
        public virtual int UpdateServis(Nullable<int> idServis, Nullable<int> itemID, Nullable<int> voziloID)
        {
            var idServisParameter = idServis.HasValue ?
                new ObjectParameter("idServis", idServis) :
                new ObjectParameter("idServis", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var voziloIDParameter = voziloID.HasValue ?
                new ObjectParameter("VoziloID", voziloID) :
                new ObjectParameter("VoziloID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServis", idServisParameter, itemIDParameter, voziloIDParameter);
        }
    
        public virtual int UpdateVozac(Nullable<int> idVozac, string name, Nullable<int> brojMobitela, Nullable<int> brojVozackeDozvole)
        {
            var idVozacParameter = idVozac.HasValue ?
                new ObjectParameter("idVozac", idVozac) :
                new ObjectParameter("idVozac", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var brojMobitelaParameter = brojMobitela.HasValue ?
                new ObjectParameter("BrojMobitela", brojMobitela) :
                new ObjectParameter("BrojMobitela", typeof(int));
    
            var brojVozackeDozvoleParameter = brojVozackeDozvole.HasValue ?
                new ObjectParameter("BrojVozackeDozvole", brojVozackeDozvole) :
                new ObjectParameter("BrojVozackeDozvole", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVozac", idVozacParameter, nameParameter, brojMobitelaParameter, brojVozackeDozvoleParameter);
        }
    
        public virtual int UpdateVozilo(Nullable<int> idVozilo, string tipVozila, string markaVozila, Nullable<int> godinaProizvodnje, Nullable<int> inicijalnoStanjeKilometara)
        {
            var idVoziloParameter = idVozilo.HasValue ?
                new ObjectParameter("idVozilo", idVozilo) :
                new ObjectParameter("idVozilo", typeof(int));
    
            var tipVozilaParameter = tipVozila != null ?
                new ObjectParameter("TipVozila", tipVozila) :
                new ObjectParameter("TipVozila", typeof(string));
    
            var markaVozilaParameter = markaVozila != null ?
                new ObjectParameter("MarkaVozila", markaVozila) :
                new ObjectParameter("MarkaVozila", typeof(string));
    
            var godinaProizvodnjeParameter = godinaProizvodnje.HasValue ?
                new ObjectParameter("GodinaProizvodnje", godinaProizvodnje) :
                new ObjectParameter("GodinaProizvodnje", typeof(int));
    
            var inicijalnoStanjeKilometaraParameter = inicijalnoStanjeKilometara.HasValue ?
                new ObjectParameter("InicijalnoStanjeKilometara", inicijalnoStanjeKilometara) :
                new ObjectParameter("InicijalnoStanjeKilometara", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVozilo", idVoziloParameter, tipVozilaParameter, markaVozilaParameter, godinaProizvodnjeParameter, inicijalnoStanjeKilometaraParameter);
        }
    
        public virtual int VratiBazuNaTvornicke()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("VratiBazuNaTvornicke");
        }
    }
}
